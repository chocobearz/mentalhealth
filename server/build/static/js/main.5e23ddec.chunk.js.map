{"version":3,"sources":["logo.svg","Components/IW.png","colors.js","Components/Nav/NavListItem.js","Components/Nav/Nav.js","Components/ReWeightDialog.js","Requests/journalRequests.js","Components/Journal.js","Components/Support/Supporter.js","Components/Support/Support.js","Components/Main.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","colors","NavListItem","props","onNavClick","id","ListItem","button","onClick","this","ListItemIcon","icon","ListItemText","primary","React","Component","Nav","toggleDrawer","newState","setState","navOpen","state","handleClose","changeNavPage","toggleAnalysis","toggleOpenAnalysisTab","style","styles","navWrapper","Button","fontSize","Drawer","anchor","open","onClose","List","Divider","text","display","justifyContent","ReWeightDialog","classes","useStyles","Dialog","aria-labelledby","dialogOpen","DialogTitle","DialogContent","Typography","Box","component","mb","borderColor","Rating","onChange","onRatingChange","iconFilled","iconHover","name","defaultValue","getLabelText","value","customIcons","label","IconContainerComponent","IconContainer","DialogActions","autoFocus","onSubmit","color","other","makeStyles","1","2","3","4","5","apiURL","googleAPIURL","journalEntry","a","fetch","method","mode","headers","Accept","body","JSON","stringify","response","json","responseJson","ok","message","Error","ratedScore","Journal","handleChange","event","clearTimeout","timer","target","setTimeout","triggerChange","handleKeyDown","e","keyCode","textFieldChange","fetchJournalScore","fetchJournalEntities","entityList","getSentimentEntities","then","i","entities","salience","push","error","getSentimentLabel","ratingValue","openDialog","fetchReWeight","reweight","personalRatedScore","currentScore","calculatedScore","journalScore","weights","toString","action","wrapper","container","TextField","multiline","variant","journal","rows","buttonStyle","openAnalysisTab","Paper","elevation","analysis","flex","margin","width","backgroundColor","Supporter","initial","pending","charAt","avatarStyle","index","Card","card","CardContent","cardContent","cardElement","Avatar","phonenumber","marginTop","marginLeft","marginRight","flexDirection","Support","supporters","supportlevel","map","supporter","key","Main","require","selectedPage","navPage","userId","base","myTheme","createMuiTheme","palette","main","secondary","App","className","ThemeProvider","theme","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.5e23ddec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/IW.65546b69.png\";","\r\n\r\nexport const colors = {\r\n  mediumPurple: \"#735D78\",\r\n  lightPink:\"#F7D1CD\",\r\n  mediumPink: \"#E8C2CA\",\r\n  lightPurple: \"#D1B3C4\"\r\n\r\n};","import React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nexport class NavListItem extends React.Component<Props, State> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onNavClick = () => {\r\n    this.props.onNavClick(this.props.id)\r\n  }\r\n\r\n  render() {\r\n   return (<ListItem button onClick={this.onNavClick}>\r\n              <ListItemIcon> {this.props.icon} </ListItemIcon>\r\n              <ListItemText primary={this.props.id} />\r\n            </ListItem>\r\n          )\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport {NavListItem} from \"./NavListItem\"\r\n\r\nexport class Nav extends React.Component<Props, State> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      navOpen: false\r\n    }\r\n  }\r\n\r\n  toggleDrawer = (newState) => {\r\n    this.setState({navOpen: !this.state.navOpen})\r\n  }\r\n\r\n  handleClose = () => {\r\n  }\r\n\r\n  onNavClick = (id) => {\r\n    this.props.changeNavPage(id)\r\n    this.setState({navOpen: false})\r\n  }\r\n\r\n  toggleAnalysis = () => {\r\n    this.props.toggleOpenAnalysisTab()\r\n    this.setState({navOpen: false})\r\n  }\r\n\r\n  render() {\r\n   return (\r\n      <div style={styles.navWrapper}>\r\n        <Button onClick={this.toggleDrawer}><MenuIcon fontSize=\"large\"/></Button>\r\n        <Drawer anchor=\"left\" open={this.state.navOpen} onClose={this.toggleDrawer}>\r\n        <List>\r\n          <NavListItem id=\"Journal\"  onNavClick={this.onNavClick} icon={<MenuBookIcon />}/>\r\n          <NavListItem id=\"Support Network\" onNavClick={this.onNavClick} icon={<PeopleIcon />}/>\r\n        </List>\r\n        <Divider/>\r\n        <List>\r\n          <NavListItem id=\"Analysis\" text=\"Text Analysis\" onNavClick={this.toggleAnalysis} icon={<AssignmentIcon />}/>\r\n        </List>\r\n        </Drawer>\r\n      </div>)\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n  navWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\"\r\n  },\r\n}\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {colors} from \"../colors\"\r\n\r\n\r\n\r\nexport default function ReWeightDialog(props) {\r\n\r\n\r\n    const classes = useStyles()\r\n   return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={props.dialogOpen}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          How are you feeling right now?\r\n        </DialogTitle>\r\n        <DialogContent >\r\n          <Typography >\r\n            This will help us personalize our app's ratings to your journaling style and increase prediction accuracy.\r\n          </Typography>\r\n        </DialogContent>\r\n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n          <Rating\r\n            onChange={props.onRatingChange}\r\n            classes={{\r\n              iconFilled: classes.iconFilled,\r\n              iconHover: classes.iconHover\r\n            }}\r\n            name=\"customized-icons\"\r\n            defaultValue={3}\r\n            getLabelText={(value) => customIcons[value].label}\r\n            IconContainerComponent={IconContainer}\r\n          />\r\n        </Box>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={props.onSubmit} color=\"primary\">\r\n            Submit Rating\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n  );\r\n}\r\nfunction handleClose(){\r\n\r\n  }\r\n\r\n  function IconContainer(props){\r\n    const { value, ...other } = props;\r\n    return <span {...other}>{customIcons[value].icon}</span>;\r\n  }\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  iconFilled: {\r\n    color: '#735D78',\r\n  },\r\n  iconHover: {\r\n    color: '#735D78',\r\n  },\r\n});\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    flex:1,\r\n    margin: 100,\r\n  },\r\n  journal: {\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(247, 209, 205, 0.3)\"\r\n  },\r\n}\r\n\r\nconst customIcons = {\r\n        1: {\r\n          icon: <SentimentVeryDissatisfiedIcon />,\r\n          label: 'Very Dissatisfied',\r\n        },\r\n        2: {\r\n          icon: <SentimentDissatisfiedIcon />,\r\n          label: 'Dissatisfied',\r\n        },\r\n        3: {\r\n          icon: <SentimentSatisfiedIcon />,\r\n          label: 'Neutral',\r\n        },\r\n        4: {\r\n          icon: <SentimentSatisfiedAltIcon />,\r\n          label: 'Satisfied',\r\n        },\r\n        5: {\r\n          icon: <SentimentVerySatisfiedIcon />,\r\n          label: 'Very Satisfied',\r\n        },\r\n      };\r\n","const apiURL = \"https://mental-health-node-app.herokuapp.com\"\r\n//const apiURL = \"https://localhost:3030\"\r\nconst googleAPIURL =   \"https://language.googleapis.com/v1/documents:analyzeEntities\"\r\nexport async function getSentimentLabel(journalEntry) {\r\n  try {\r\n    let response: any = await fetch(apiURL + \"/journal/getSentimentLabel\", {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      \"journalEntry\": journalEntry,\r\n    }),\r\n  });\r\n    let responseJson = await response.json();\r\n    if(response.ok) {\r\n      return responseJson;\r\n    } else if (!responseJson.message) {\r\n      throw new Error(\"Something went wrong\")\r\n    } else {\r\n      throw new Error(responseJson.message)\r\n    }\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n}\r\n\r\nexport async function getSentimentEntities(journalEntry) {\r\n  try {\r\n    let response: any = await fetch(googleAPIURL + \"?key=AIzaSyBt7uIyp2Lsmr37nCdce_8wVi389uJjmIc\", {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n        \"document\": {\r\n            \"type\":\"PLAIN_TEXT\",\r\n            \"language\": \"EN\",\r\n            \"content\": journalEntry\r\n        }\r\n    }),\r\n  });\r\n    let responseJson = await response.json();\r\n    if(response.ok) {\r\n      return responseJson;\r\n    } else if (!responseJson.message) {\r\n      throw new Error(\"Something went wrong\")\r\n    } else {\r\n      throw new Error(responseJson.message)\r\n    }\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n}\r\n\r\nexport async function reweight(journalEntry, ratedScore) {\r\n  try {\r\n    let response: any = await fetch(apiURL + \"/journal/reWeightAndGetSentimentLabel\", {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      \"journalEntry\": journalEntry,\r\n      \"ratedScore\": ratedScore\r\n    }),\r\n  });\r\n    let responseJson = await response.json();\r\n    if(response.ok) {\r\n      return responseJson;\r\n    } else if (!responseJson.message) {\r\n      throw new Error(\"Something went wrong\")\r\n    } else {\r\n      throw new Error(responseJson.message)\r\n    }\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n}","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ReWeightDialog from \"./ReWeightDialog\"\r\nimport {getSentimentLabel, getSentimentEntities, reweight} from \"../Requests/journalRequests\"\r\nimport {colors} from \"../colors\"\r\n\r\nconst WAIT_INTERVAL = 1000;\r\nconst ENTER_KEY = 13;\r\n\r\nexport class Journal extends React.Component<Props, State> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      journalEntry: \"\",\r\n      label: 0,\r\n      entities: [],\r\n      weights: [],\r\n      ratingValue: 3,\r\n      dialogOpen: false,\r\n      personalRatedScore: '',\r\n      calculatedScore: ''\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n        this.timer = null;\r\n    }\r\n\r\n  handleChange = (event) => {\r\n        clearTimeout(this.timer);\r\n\r\n        this.setState({journalEntry: event.target.value});\r\n\r\n        this.timer = setTimeout(this.triggerChange, WAIT_INTERVAL);\r\n    }\r\n\r\n    handleKeyDown = (e) =>{\r\n        if (e.keyCode === ENTER_KEY) {\r\n            this.triggerChange();\r\n        }\r\n    }\r\n\r\n    triggerChange = () => {\r\n        this.textFieldChange();\r\n    }\r\n\r\n  textFieldChange = () => {\r\n    //this.setState({journalEntry: event.target.value})\r\n    this.fetchJournalScore()\r\n    this.fetchJournalEntities()\r\n\r\n\r\n  }\r\n\r\n  fetchJournalEntities = () => {\r\n    let entityList = []\r\n     getSentimentEntities(this.state.journalEntry).then(\r\n      (value) => { \r\n        for (let i in value.entities) {\r\n          if (0.2 < value.entities[i].salience &&  value.entities[i].salience < 0.7) {\r\n            entityList.push(value.entities[i].name)\r\n          }\r\n        }\r\n        this.setState({entities: entityList})\r\n      },\r\n      (error) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  fetchJournalScore = () => {\r\n     getSentimentLabel(this.state.journalEntry).then(\r\n      (value) => { \r\n        this.setState({label: value.label})\r\n      },\r\n      (error) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  onRatingChange = (event, value) => {\r\n    this.setState({ratingValue: value})\r\n  }\r\n\r\n  openDialog = () => {\r\n    this.setState({dialogOpen: true})\r\n  }\r\n\r\n  fetchReWeight = () => {\r\n    reweight(this.state.journalEntry, this.state.ratingValue).then(\r\n      (value) => { \r\n        this.setState({dialogOpen: false})\r\n        this.setState({personalRatedScore: value.currentScore})\r\n        this.setState({calculatedScore: value.journalScore})\r\n        this.setState({weights: value.weights})\r\n      },\r\n      (error) => {\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let weights = this.state.weights.toString()\r\n    let action = ''\r\n    if (this.state.label == 1) {\r\n      action = \"Provide positive reinforcement message\"\r\n    } \r\n    if (this.state.label == -1) {\r\n      action = \"Contact first level support. Suggest self-care activity\"\r\n    } \r\n    if (this.state.label == -3) {\r\n      action = \"Contact entire support network. Provide crisis intervention resources\"\r\n    }\r\n   return (\r\n      <div style={styles.wrapper}>\r\n        <div style={styles.container}>\r\n          <TextField\r\n            id=\"journalText\"\r\n            label=\"How are you feeling today?\"\r\n            multiline\r\n            value={this.state.journalEntry}\r\n            variant=\"outlined\"\r\n            style= {styles.journal}\r\n            rows={25}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Button style={styles.buttonStyle} variant=\"contained\" color=\"primary\">\r\n            Submit\r\n          </Button>\r\n          {this.props.openAnalysisTab &&<Button onClick={this.openDialog} style={styles.buttonStyle} variant=\"contained\" color=\"primary\">\r\n            ReWeight\r\n          </Button> }\r\n        </div>\r\n        {this.props.openAnalysisTab && <div style={styles.container}>\r\n          <Paper elevation={0} variant=\"outlined\" style={styles.analysis}>\r\n            <List>\r\n              <ListItem>\r\n                <ListItemText primary={\"Sentiment Label: \" + this.state.label} />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText primary={\"Sentiment Entities: \" + this.state.entities.toString()} />\r\n              </ListItem>\r\n              <Divider/>\r\n              <ListItem>\r\n                <ListItemText primary={\"Action: \" + action} />\r\n              </ListItem>\r\n              <Divider/>\r\n              <ListItem>\r\n                <ListItemText primary={\"Weights: \" + this.state.weights} />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText primary={\"Journal Calculated Score: \" + this.state.calculatedScore}/>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText primary={\"Personal Rated Score:\" + this.state.personalRatedScore } />\r\n              </ListItem>\r\n            </List>\r\n          </Paper>\r\n          <ReWeightDialog dialogOpen={this.state.dialogOpen} onSubmit={this.fetchReWeight} onRatingChange={this.onRatingChange}/>\r\n        </div>}\r\n      </div>)\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex:1,\r\n    margin: 80,\r\n  },\r\n  journal: {\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(247, 209, 205, 0.3)\"\r\n  },\r\n  buttonStyle: {\r\n    margin: 20\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    margin:10\r\n  },\r\n  analysis: {\r\n    backgroundColor: \"rgba(209, 179, 196, 1)\"\r\n  }\r\n}\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {colors} from \"../../colors\"\r\nexport class Supporter extends React.Component<Props, State> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n  render() {\r\n    const initial = this.props.pending? \"!\" : this.props.name.charAt(0)\r\n    const color = (this.props.index % 2 == 0) ? colors.mediumPurple : colors.lightPurple\r\n    const avatarStyle= {\r\n      backgroundColor: color,\r\n    } \r\n   return (\r\n      <Card style={styles.card}>\r\n        <CardContent style={styles.cardContent}>\r\n          <div style={styles.cardElement}>\r\n          <Avatar style={avatarStyle} >{initial}</Avatar>\r\n          </div>\r\n          <div style={styles.cardElement}>{this.props.name}</div>\r\n          <div style={styles.cardElement}>{this.props.phonenumber}</div>\r\n        </CardContent>\r\n    </Card>)\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n  card: {\r\n    flex:1,\r\n    marginTop: 20,\r\n    marginLeft: 100,\r\n    marginRight: 100,\r\n    backgroundColor: \"rgba(237, 219, 217, 0.6)\"\r\n  },\r\n  cardContent: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  cardElement: {\r\n    display: \"flex\",\r\n    flex: 1\r\n  }\r\n}\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Supporter} from \"./Supporter\"\r\nexport class Support extends React.Component<Props, State> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n  render() {\r\n    const supportersList = [{id: 12, name: \"Jesse Elm\", phonenumber: \"1234567890\", supportlevel: 3}, {id: 4, name: \"Mom\", phonenumber: \"1234567890\", supportlevel: 1}, {id: 5, name: \"Casey\", phonenumber: \"1234567890\", supportlevel: 1}]\r\n\r\n    let supporters = (supportersList).map((supporter, i) =>\r\n    <Supporter  name={supporter.name} index={i} key={i} id={supporter.id} phonenumber={supporter.phonenumber}/>\r\n    );\r\n   return (\r\n      <div style={styles.wrapper}>\r\n        <div>\r\n        </div>\r\n        <div>\r\n          {supporters}\r\n        </div>\r\n      </div>)\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    flex:1,\r\n    margin: 100,\r\n  },\r\n}\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {colors} from \"../colors\"\r\nimport {Nav} from \"./Nav/Nav\"\r\nimport {Journal} from \"./Journal\"\r\nimport {Support} from \"./Support/Support\"\r\nconst logo = require('./IW.png')\r\n\r\nexport class Main extends React.Component<Props, State> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      navPage: \"Journal\",\r\n      userId: 1,\r\n      openAnalysisTab: false\r\n    }\r\n  }\r\n\r\n  changeNavPage = (selectedPage) => {\r\n    this.setState({navPage: selectedPage})\r\n  }\r\n\r\n  toggleOpenAnalysisTab = () => {\r\n    this.setState({openAnalysisTab: !this.state.openAnalysisTab})\r\n  }\r\n\r\n  render() {\r\n   return (\r\n    <div style={styles.base}>\r\n      <Nav changeNavPage={this.changeNavPage} toggleOpenAnalysisTab={this.toggleOpenAnalysisTab}/>\r\n      <h2>{this.state.navPage}</h2>\r\n        {this.state.navPage == \"Journal\" && <Journal userId={this.state.userId} openAnalysisTab={this.state.openAnalysisTab}/>}\r\n        {this.state.navPage == \"Support Network\" && <Support userId={this.state.userId}/>}\r\n    </div>)\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n  base: {\r\n    flex:1\r\n  },\r\n  wrapper: {\r\n    flex:1,\r\n    margin: \"80 100\",\r\n  },\r\n  journal: {\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(247, 209, 205, 0.3)\"\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport {colors} from './colors';\r\n\r\nexport const myTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: colors.mediumPurple,\r\n    },\r\n    secondary: {\r\n      main: colors.lightPink,\r\n    },\r\n  },\r\n});","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {Main} from \"./Components/Main\";\r\nimport {myTheme} from \"./theme\"\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nfunction App() {\r\n  return (<div className=\"App\">\r\n    <ThemeProvider theme={myTheme}>\r\n        <Main/>\r\n    </ThemeProvider>\r\n    </div>);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}